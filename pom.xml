<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cn.guruguru</groupId> <!-- or: io.github.jinsyin -->
    <artifactId>template-java</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>template-java</name>
    <description>template-java</description>
    <url>https://github.com/jinsyin/template-java</url>

    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>JinsYin</name>
            <email>jinsyin@163.com</email>
        </developer>
    </developers>

    <scm>
        <url>https://github.com/jinsyin/template-java</url>
        <connection>scm:git:git://github.com/jinsyin/template-java.git</connection>
        <developerConnection>scm:git:ssh://github.com:jinsyin/template-java.git</developerConnection>
    </scm>

    <distributionManagement>
		<repository>
			<id>central-releases</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
        <snapshotRepository>
            <id>central-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <properties>
        <java.version>8</java.version>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <lombok.version>1.18.2</lombok.version>
        <springboot.version>2.7.18</springboot.version> <!-- The highest version supported by Java 8-->
		<mybatisplus.version>3.5.6</mybatisplus.version>
    </properties>

	<dependencyManagement>
		<dependencies>
			<!-- Import dependency management from Spring Boot -->
			<!-- There may be reasons for you not to inherit from the spring-boot-starter-parent POM -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${springboot.version}</version>  <!-- Spring Boot 3.0 requires Java 17 -->
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

    <dependencies>
        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
		<!-- Spring Boot Web: spring-boot-starter & spring-mvc & spring-boot-starter-tomcat -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- Spring Boot Validation, such as @NotBlank, @NotEmpty, @Size -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<!-- Spring Boot Test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Mybatis Plus -->
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus-boot-starter</artifactId>
			<version>${mybatisplus.version}</version> <!-- SpringBoot3: mybatis-plus-spring-boot3-starter -->
		</dependency>
		<!-- H2 Database -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
    </dependencies>

    <build>
        <plugins>
			<!-- Spring Boot Plugin -->
			<!-- https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${springboot.version}</version>
				<executions>
					<execution>
						<goals>
							<!-- Repackage existing JAR and WAR archives so that
							they can be executed from the command line -->
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
            <!-- Maven Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <compilerArgument>-parameters</compilerArgument>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <!-- Maven JavaDoc Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Maven Source Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Central Publishing Maven Plugin for publishing components in Maven Central -->
            <!-- https://central.sonatype.org/publish/publish-portal-maven/ -->
            <plugin>
                <groupId>org.sonatype.central</groupId>
                <artifactId>central-publishing-maven-plugin</artifactId>
                <version>0.4.0</version>
                <extensions>true</extensions>
                <configuration>
                    <publishingServerId>central</publishingServerId> <!-- The ID of the server in settings.xml -->
                    <tokenAuth>true</tokenAuth> <!-- use token authentication in settings.xml -->
                    <checksums>required</checksums> <!-- MD5 and SHA1 checksums  -->
                </configuration>
            </plugin>
            <!-- Maven GPG Plugin -->
            <!-- https://central.sonatype.org/publish/requirements/gpg/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>3.2.2</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Maven Release Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>3.0.1</version>
            </plugin>
        </plugins>
    </build>

	<profiles>
		<!-- [API Doc]: Knife4j OpenAPI2 Specification -->
		<!-- github.com/xiaoymin/knife4j -->
		<profile>
			<id>Knife4j-OpenAPI2</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.github.xiaoymin</groupId>
					<artifactId>knife4j-openapi2-spring-boot-starter</artifactId>
					<version>4.5.0</version>
				</dependency>
			</dependencies>
		</profile>

		<!-- [API Doc] Smart-Doc + Torna -->
		<!-- https://smart-doc-group.github.io/#/start/quickstart?id=minimize-configuration -->
		<profile>
			<id>Smart-Doc</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.ly.smart-doc</groupId>
						<artifactId>smart-doc-maven-plugin</artifactId>
						<version>3.0.3</version>
						<configuration>
							<configFile>${basedir}/src/main/resources/smart-doc.json</configFile>
							<projectName>template-java</projectName>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>html</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
